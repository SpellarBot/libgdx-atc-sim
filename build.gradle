def javaVersion = JavaVersion.VERSION_1_7;

// solution from here: http://stackoverflow.com/questions/28065488/how-to-enforce-a-java-compiler-version-with-gradle
task enforceVersion << {
    def foundVersion = JavaVersion.current();
    if (foundVersion != javaVersion)
        throw new IllegalStateException("Wrong Java version; required is "
                + javaVersion + ", but found " + foundVersion);
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    dependencies {
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.2.0"
    }
}



allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "me.champeau.gradle.jmh"

    version = '1.0'
    ext {
        appName = "atc-simulator"
        gdxVersion = '1.9.2'
        roboVMVersion = '1.12.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
        gsonVersion = '2.6.2'
        protobufVersion = '3.0.2'
        pythagorasVersion = '1.4.1'
        typesafeConfigVersion = '1.2.1'
        jmhVersion = '1.12'
        joclVersion = '2.0.0'
        xchartVersion = '3.1.0'
        leastsquaresVersion = '1.0.0'
        ejmlVersion = '0.29'
        ddoglegVersion = '0.9'
        guavaVersion = '19.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }


}

project(":desktop") {
    apply plugin: "java"

    sourceCompatibility = javaVersion;
    targetCompatibility = javaVersion; // defaults to sourceCompatibility
    compileJava.dependsOn(enforceVersion);


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    }
}

project(":core") {
    apply plugin: "java"

    sourceCompatibility = javaVersion;
    targetCompatibility = javaVersion; // defaults to sourceCompatibility
    compileJava.dependsOn(enforceVersion);


    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        compile "com.samskivert:pythagoras:$pythagorasVersion"
        compile "com.google.protobuf:protobuf-java:$protobufVersion"
        compile "com.google.code.gson:gson:$gsonVersion"
        compile "com.typesafe:config:$typesafeConfigVersion"
        compile "org.openjdk.jmh:jmh-core:$jmhVersion"
        compile "org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion"
        compile "org.jocl:jocl:$joclVersion"
        compile "org.knowm.xchart:xchart:$xchartVersion"
        compile "org.orangepalantir:leastsquares:$leastsquaresVersion"
        compile "org.ejml:all:$ejmlVersion"
        compile "org.ddogleg:ddogleg:$ddoglegVersion"
        compile "com.google.guava:guava:$guavaVersion"
        testCompile "junit:junit:+"
        //compile "net.mikera:vectorz:0.61.0"

    }
}

task compileProtocolBuffers(type:Exec) {
  workingDir './core/'
  if (System.getProperty('os.name').toLowerCase().contains('windows')) {
      commandLine './compileProtocolBuffers.bat'
  } else {
      commandLine './compileProtocolBuffers.sh'
  }
}


tasks.eclipse.doLast {
    delete ".project"
}
